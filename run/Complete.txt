COMPLETE_ANN
COMPLETE_ANN
Load: 1.048s, Before split: 0.002064s, Split: 6.914e-05s, After split: 0.006412s
GNN(
  (preprocess): Preprocess(
    node_feature: dim_out=30
    Total: dim_out=30
  )
  (pre_mp): GeneralMultiLayer(
    (Layer_0): GeneralLayer(
      (layer): Linear(
        (model): Linear(in_features=30, out_features=137, bias=False)
      )
      (post_layer): Sequential(
        (0): BatchNorm1d(137, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (Layer_1): GeneralLayer(
      (layer): Linear(
        (model): Linear(in_features=137, out_features=137, bias=False)
      )
      (post_layer): Sequential(
        (0): BatchNorm1d(137, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
  (mp): GNNSkipStage(
    (block0): GNNSkipBlock(
      (f): Sequential(
        (0): GeneralLayer(
          (layer): GeneralConv(
            (model): GeneralConvLayer(137, 137)
          )
          (post_layer): Sequential(
            (0): BatchNorm1d(137, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (act): PReLU(num_parameters=1)
    )
    (block1): GNNSkipBlock(
      (f): Sequential(
        (0): GeneralLayer(
          (layer): GeneralConv(
            (model): GeneralConvLayer(137, 137)
          )
          (post_layer): Sequential(
            (0): BatchNorm1d(137, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (act): PReLU(num_parameters=1)
    )
    (block2): GNNSkipBlock(
      (f): Sequential(
        (0): GeneralLayer(
          (layer): GeneralConv(
            (model): GeneralConvLayer(137, 137)
          )
          (post_layer): Sequential(
            (0): BatchNorm1d(137, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (act): PReLU(num_parameters=1)
    )
    (block3): GNNSkipBlock(
      (f): Sequential(
        (0): GeneralLayer(
          (layer): GeneralConv(
            (model): GeneralConvLayer(137, 137)
          )
          (post_layer): Sequential(
            (0): BatchNorm1d(137, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (act): PReLU(num_parameters=1)
    )
    (block4): GNNSkipBlock(
      (f): Sequential(
        (0): GeneralLayer(
          (layer): GeneralConv(
            (model): GeneralConvLayer(137, 137)
          )
          (post_layer): Sequential(
            (0): BatchNorm1d(137, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (act): PReLU(num_parameters=1)
    )
    (block5): GNNSkipBlock(
      (f): Sequential(
        (0): GeneralLayer(
          (layer): GeneralConv(
            (model): GeneralConvLayer(137, 137)
          )
          (post_layer): Sequential(
            (0): BatchNorm1d(137, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (act): PReLU(num_parameters=1)
    )
  )
  (post_mp): GNNGraphHead(
    (layer_post_mp): MLP(
      (model): Sequential(
        (0): GeneralMultiLayer(
          (Layer_0): GeneralLayer(
            (layer): Linear(
              (model): Linear(in_features=137, out_features=137, bias=False)
            )
            (post_layer): Sequential(
              (0): BatchNorm1d(137, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (1): PReLU(num_parameters=1)
            )
          )
        )
        (1): Linear(
          (model): Linear(in_features=137, out_features=1, bias=True)
        )
      )
    )
  )
)
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  augment_feature: []
  augment_feature_dims: []
  augment_feature_repr: position
  augment_label: 
  augment_label_dims: 0
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: False
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: PyG
  label_column: none
  label_table: none
  location: local
  name: Custom,COMPLETE_ANN,,
  node_encoder: False
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.2]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
device: cpu
example_arg: example
example_group:
  example_arg: example
gnn:
  act: prelu
  agg: add
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 137
  dropout: 0.0
  flow: source_to_target
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: generalconv
  layers_mp: 6
  layers_post_mp: 2
  layers_pre_mp: 2
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: skipsum
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 400
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: results/COMPLETE_ANN
print: both
round: 4
run_dir: results/COMPLETE_ANN/0
seed: 1
share:
  dim_in: 30
  dim_out: 1
  num_splits: 2
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 80
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 20
  iter_per_epoch: 32
  mode: standard
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 269481
Device: cpu
Cuda available: False
> /home/royhe62/Documents/Dockers/cypress/iCypressParallel/run/main.py(80)<module>()
-> if cfg.train.mode == 'standard':
(Pdb) <torch.optim.lr_scheduler.CosineAnnealingLR object at 0x727c783b5cd0>
(Pdb) 'cos'
(Pdb) Start Time is: 2024-06-13 09:28:06
End Time is: 2024-06-13 09:50:56
